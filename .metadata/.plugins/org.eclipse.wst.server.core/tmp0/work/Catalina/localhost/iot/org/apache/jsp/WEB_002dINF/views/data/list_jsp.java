/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-04-18 09:06:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.data;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/STUDY_SPRING/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/iot/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1676520927963L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".pharmacy, .animal, #list-top { width: 1200px }\r\n");
      out.write(".pharmacy td:nth-child(3) { text-align: left; }\r\n");
      out.write("#popup { width: 800px; height: 600px; }\r\n");
      out.write("table.animal img { width:100%; height:100px }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>공공데이터</h3>\r\n");
      out.write("<div class='btnSet api'>\r\n");
      out.write("	<a>약국정보</a>\r\n");
      out.write("	<a>유기동물정보</a>\r\n");
      out.write("</div>\r\n");
      out.write("<div id='list-top'>\r\n");
      out.write("	<ul class='animal-top'></ul>\r\n");
      out.write("	<ul class='common'>\r\n");
      out.write("		<li><select class='w-px100' id='pageList'>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</select>\r\n");
      out.write("		</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>\r\n");
      out.write("<div id='data-list'></div>\r\n");
      out.write("<div class='btnSet'>\r\n");
      out.write("	<div class='page-list'></div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 로딩 중 나타날 화면  -->\r\n");
      out.write("<div class='loading center'><img src='imgs/1495.gif'></div>\r\n");
      out.write("<div id='popup-background'></div>\r\n");
      out.write("<div id='popup' class='center'></div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=6d086d8bcae1c61813cde8b3708fd6fe\">\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- API key : 6d086d8bcae1c61813cde8b3708fd6fe -->\r\n");
      out.write("	\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(window).scroll(function(){\r\n");
      out.write("	center( $('#popup'), $('#popup-background'))\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(window).resize(function(){\r\n");
      out.write("	center( $('#popup'), $('#popup-background'))\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('.api a').click(function(){\r\n");
      out.write("	$('.api a').removeClass();\r\n");
      out.write("	$(this).addClass('btn-fill');\r\n");
      out.write("	$('.api a').not( $(this)).addClass('btn-empty');\r\n");
      out.write("	\r\n");
      out.write("	if( $(this).index()==0 )	pharmacy_list( 1 ); //처음들어가면 1페이지\r\n");
      out.write("	else						animal_list( 1 );\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("//유기동물 시도 조회\r\n");
      out.write("function animal_sido(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:'data/animal/sido',\r\n");
      out.write("		success: function( response ){\r\n");
      out.write("				console.log(response)\r\n");
      out.write("				$('.animal-top').html( response );\r\n");
      out.write("				animal_type();\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//축종\r\n");
      out.write("function animal_type(){\r\n");
      out.write("	var tag\r\n");
      out.write("	= \"<li>\"\r\n");
      out.write("	+ \"<select class='w-px100' id='upkind'>\"\r\n");
      out.write("	+ \"<option value=''>축종선택</option>\"\r\n");
      out.write("	+ \"<option value='417000'>개</option>\"\r\n");
      out.write("	+ \"<option value='422400'>고양이</option>\"\r\n");
      out.write("	+ \"<option value='429900'>기타</option>\"\r\n");
      out.write("	+ \"</select>\"\r\n");
      out.write("	+ \"</li>\";\r\n");
      out.write("	\r\n");
      out.write("	//축종은 시군구와 아무런 관련이 없으므로 화면에 바로 나올 수 있도록 아이디 animal-top에 붙임\r\n");
      out.write("	$('.animal-top').append( tag );\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//유기동물 정보 조회\r\n");
      out.write("function animal_list( page ){\r\n");
      out.write("	if($('#sido').length==0 ) animal_sido();\r\n");
      out.write("	\r\n");
      out.write("	$('#data-list').html('');\r\n");
      out.write("	$('.page-list').html('');\r\n");
      out.write("	loading(true);\r\n");
      out.write("	var animal = {};\r\n");
      out.write("	animal.pageNo = page;\r\n");
      out.write("	animal.rows = pageList;\r\n");
      out.write("	animal.sido = $('#sido').length > 0 ? $('#sido').val():'';\r\n");
      out.write("	animal.sigungu = $('#sigungu').length > 0 ? $('#sigungu').val():'';		//시군구에 따른 조회\r\n");
      out.write("	animal.shelter = $('#shelter').length > 0 ? $('#shelter').val():'';		//보호소에 따른 조회\r\n");
      out.write("	animal.upkind = $('#upkind').length > 0 ? $('#upkind').val():'';		//축종에 따른 조회\r\n");
      out.write("	animal.kind = $('#kind').length > 0 ? $('#kind').val():'';		//품종에 따른 조회\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		contentType: 'application/json',\r\n");
      out.write("		url: 'data/animal/list',\r\n");
      out.write("		data: JSON.stringify( animal ),\r\n");
      out.write("		success: function( response ){\r\n");
      out.write("			$('#data-list').html( response );\r\n");
      out.write("			loading(false);\r\n");
      out.write("		},error: function(){\r\n");
      out.write("			\r\n");
      out.write("			loading(false);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('#pageList').change(function(){\r\n");
      out.write("	pageList = $(this).val();\r\n");
      out.write("	pharmacy_list( 1 );\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//약국정보 조회\r\n");
      out.write("function pharmacy_list( page ){\r\n");
      out.write("	$('.animal-top').empty();\r\n");
      out.write("	\r\n");
      out.write("	loading(true);\r\n");
      out.write("	var tag\r\n");
      out.write("	= \"<table class='tb-list pharmacy'>\"\r\n");
      out.write("		+ \"<thead><tr><th class='w-px300'>약국명</th>\"\r\n");
      out.write("		+ \" <th class='w-px120'>전화번호</th>\"\r\n");
      out.write("		+ \" <th>주소</th>\"\r\n");
      out.write("		+ \" </tr>\" \r\n");
      out.write("		+ \" </thead>\"\r\n");
      out.write("		+ \" </table>\";\r\n");
      out.write("		$('#data-list').html( tag );\r\n");
      out.write("		$('.page-list').html( '' );\r\n");
      out.write("		\r\n");
      out.write("		tag = '';\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			data: {pageNo: page, rows:pageList},\r\n");
      out.write("			url: 'data/pharmacy',\r\n");
      out.write("			success: function( response ){\r\n");
      out.write("				console.log( response );\r\n");
      out.write("				$(response.item).each(function(){\r\n");
      out.write("					tag += \"<tr><td><a class='map' data-x='\"\r\n");
      out.write("									+ this.XPos +\"' data-y='\"+ this.YPos +\"'>\"+ this.yadmNm +\"</a></td>\"\r\n");
      out.write("							+  \"<td>\"+ (this.telno ? this.telno : '-') +\"</td>\"\r\n");
      out.write("							+  \"<td>\"+ this.addr +\"</td>\"\r\n");
      out.write("							+  \"</tr>\";	\r\n");
      out.write("				});\r\n");
      out.write("				$('#data-list table thead').append( tag );\r\n");
      out.write("				makePage( response.count , page);\r\n");
      out.write("				\r\n");
      out.write("				loading(false);\r\n");
      out.write("			},error: function(){\r\n");
      out.write("				loading(false);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("var pageList = 10, blockPage=10;\r\n");
      out.write("function makePage( totalList, curPage ){\r\n");
      out.write("	var tag = '';\r\n");
      out.write("	//총 페이지 갯수 = 총 목록 / 페이지 목록(10개씩)\r\n");
      out.write("	var totalPage = Math.ceil( totalList / pageList );\r\n");
      out.write("	//총 블럭 수 = 총 페이지 수 / 블럭 페이지 수(10개씩)\r\n");
      out.write("	var totalBlock = Math.ceil( totalPage / blockPage );\r\n");
      out.write("	//현재 블럭 수 \r\n");
      out.write("	var curBlock = Math.ceil( curPage /blockPage);\r\n");
      out.write("	//페이지 번호\r\n");
      out.write("	var endPage = curBlock * blockPage;\r\n");
      out.write("	var beginPage = endPage - (blockPage-1);\r\n");
      out.write("	\r\n");
      out.write("	if(endPage > totalPage ) endPage = totalPage;\r\n");
      out.write("	\r\n");
      out.write("	if(curBlock > 1 ){\r\n");
      out.write("		tag += '<a data-page=\"1\"><i class=\"fa-solid fa-angle-left\"></i></a>'\r\n");
      out.write("			+ '<a data-page=\"'+ (beginPage-blockPage) + '\"><i class=\"fa-solid fa-angles-left\"></i></a>';\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	for(var no=beginPage; no<=endPage; no++){\r\n");
      out.write("		if( no==curPage ) tag += '<span>' + no +'</span>';\r\n");
      out.write("		else			  tag += '<a data-page=\"'+ no +'\">'+ no + '</a>';\r\n");
      out.write("	}\r\n");
      out.write("	if( totalBlock > curBlock){\r\n");
      out.write("		tag += '<a data-page=\"'+ (endPage + 1) +'\"><i class=\"fa-solid fa-angle-right\"></i></a>'\r\n");
      out.write("				+ '<a data-page=\"'+ totalPage + '\"><i class=\"fa-solid fa-angles-right\"></i></a>';\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$('.page-list').html( tag );\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//첫 화면 선택해논 강제 발생 트리거 0: 약국 , 1: 유기정보\r\n");
      out.write("$(function(){\r\n");
      out.write("	$('.api a').eq(0).trigger('click');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//동적인 페이지로 나누어 표시한 것임으로 함수를 걸어줌\r\n");
      out.write("$(document).on('click', '.page-list a', function(){\r\n");
      out.write("	if( $('.pharmacy').length > 0 ) pharmacy_list( $(this).data('page') );\r\n");
      out.write("	else if( $('.animal').length > 0 ) animal_list( $(this).data('page') );\r\n");
      out.write("	\r\n");
      out.write("}).on('click', '.map', function(){\r\n");
      out.write("	if( $(this).data('x')=='undefind' || $(this).data('y')=='undefined'){\r\n");
      out.write("		alert('위경도가 없어 위치를 표시할 수 없습니다!')\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$('#popup, #popup-background').css('display', 'block');\r\n");
      out.write("	//latitude(위도): y, longitude(경도):x\r\n");
      out.write("	var x = $(this).data('x'), y=$(this).data('y');\r\n");
      out.write("	var xy = new kakao.maps.LatLng(y, x);\r\n");
      out.write("	\r\n");
      out.write("	//지도를 담을 영역의 DOM 레퍼런스\r\n");
      out.write("	var container = document.getElementByld('popup');\r\n");
      out.write("	var options = {//지도를 성성할 떄 필요한 기본 옵션 \r\n");
      out.write("			center: xy,	//지도의 중심 좌표\r\n");
      out.write("			level: 3	//지도의 레벨 (확대 출소 정도)\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	var map = new kakao.maps.Map(container, options);	//지도 생성 및 객체 리턴\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	//마커를 생성합니다 \r\n");
      out.write("	var marker = new kakao.maps.Marker({\r\n");
      out.write("		position: xy		//마커가 표시될 위치\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("	marker.setMap(map);\r\n");
      out.write("	\r\n");
      out.write("	//인포 윈도우를 생성합니다\r\n");
      out.write("	var infowindow = new kakao.maps.infoWindow({\r\n");
      out.write("		position: xy,\r\n");
      out.write("		content: '<div style=\"padding:5px;\">'+$(this).text()+'</div>'\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//마커 위에 인포윈도우를 표시합니다. 두 번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다 \r\n");
      out.write("	infowindow.open(map, marker);\r\n");
      out.write("	\r\n");
      out.write("}).on('click', '#popup-background', function(){\r\n");
      out.write("	$('#popup, #popup-background').css('display', 'none');\r\n");
      out.write("	\r\n");
      out.write("}).on('change', '#upkind', function(){\r\n");
      out.write("	animal_kind();\r\n");
      out.write("	animal_list(1);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//축종에 대한 품종 조회\r\n");
      out.write("function animal_kind(){\r\n");
      out.write("	$('#kind').closest('li').remove();\r\n");
      out.write("	if( $('#upkind').val()=='' )return;\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: 'data/animal/kind',\r\n");
      out.write("		data: {upkind:$('#upkind').val()},\r\n");
      out.write("		success: function( response ){\r\n");
      out.write("			$('#upkind').closest('li').after( response )\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/data/list.jsp(26,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      // /WEB-INF/views/data/list.jsp(26,4) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1);
      // /WEB-INF/views/data/list.jsp(26,4) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(5);
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					<option value='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${10*i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('\'');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${10*i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("개씩</option>\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
